Resources:
  DataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:provider.environment.NAMESPACE}-data
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: 'AES256'
      LoggingConfiguration:
        DestinationBucketName: ${param:loggingBucket}
        LogFilePrefix: s3-data-logs
#        VersioningConfiguration:
#          Status: Enabled

  DeliveryStreamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:provider.environment.NAMESPACE}-delivery-stream-role
      Path: '/anything/roles/'
      Description: 'Role for Firehose to read/write to data bucket'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'
      Policies:
      # To add permissions to use customer management keys refer to:
      #  https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3
        - PolicyName: ${self:provider.environment.NAMESPACE}-delivery-stream-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:PutObject'
                Resource:
                  - !GetAtt DataBucket.Arn
                  - !Sub ${DataBucket.Arn}/*

  # ref: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html
  DeliveryStream: 
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties: 
      # Match the source DynamoDB table name, this match is used by lambda-streams-to-firehose handler
      DeliveryStreamName: ${param:streamTableName}
      DeliveryStreamType: DirectPut
      DeliveryStreamEncryptionConfigurationInput:
        KeyType: AWS_OWNED_CMK
      ExtendedS3DestinationConfiguration: 
        BucketARN: !GetAtt DataBucket.Arn
        BufferingHints: 
          SizeInMBs: 128
          IntervalInSeconds: 900
        # Athena compression support: https://docs.aws.amazon.com/athena/latest/ug/compression-formats.html
        # Firehose allowed values: GZIP | HADOOP_SNAPPY | Snappy | UNCOMPRESSED | ZIP
        # Ideally would use zstd since Athena supports it, but Firehose does not.
        # (Hadoop) Snappy is similar in speed to zstd but worse compression than zstd/gzip,
        #  and billing for Firehose and Athena is by data size.
        CompressionFormat: GZIP
        RoleARN: !GetAtt DeliveryStreamRole.Arn
