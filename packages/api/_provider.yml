name: aws
runtime: nodejs18.x
#memorySize: 256
stage: ${env:STAGE, 'dev'}
region: ${env:AWS_REGION}
# Opt in to CloudFormation direct deployments
# ref: https://www.serverless.com/framework/docs/providers/aws/guide/deploying
deploymentMethod: direct
environment:
  NAMESPACE: ${self:service}-${sls:stage}-${env:UNIQ}
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  PRODUCTION_APP_URL: ${env:PRODUCTION_APP_URL, ''}
apiGateway:
  # ref: https://www.serverless.com/framework/docs/providers/aws/events/apigateway#providing-a-custom-stage-name
  stage: 'v1'
httpApi:
  # ref: https://www.serverless.com/framework/docs/providers/aws/events/http-api#cors-setup
#  cors: true
#  cors:
#    allowedOrigins:
#      - http://localhost:3000
#      - https://${param:distributionDomainName}
#    allowedHeaders:
#    # ref: https://stackoverflow.com/a/60849907
#      - Content-Type
#      - X-Amz-Date
#      - Authorization
#      - X-Api-Key
#      - X-Amz-Security-Token
#      - X-Amz-User-Agent
#      - X-Amzn-Trace-Id
#      - X-Requested-With
#      - Accept
#      - Access-Control-Allow-Methods
#      - Access-Control-Allow-Origin
#      - Access-Control-Allow-Headers
#    allowedMethods:
#      - OPTIONS
#      - GET
#      - POST
#      - DELETE
#      - PUT
#      - PATCH
#      - HEAD
#    allowCredentials: true
#    maxAge: 300
  payload: '2.0'
  # Using IAM to control API method access
  # ref: https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-access-control-iam.html
  # ref: https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html

# Allow app's lambda functions to connect to dynamodb.
# ref: https://www.serverless.com/framework/docs/providers/aws/guide/iam
iam:
  role:
    statements:
      - Effect: Allow
        Action:
          # ref: https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondynamodb.html
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:BatchGetItem
          - dynamodb:BatchWriteItem
#          - dynamodb:CreateTable
#          - dynamodb:UpdateTable
          - dynamodb:ListStreams
          - dynamodb:DescribeStream
          - dynamodb:GetShardIterator
          - dynamodb:GetRecords
        Resource:
          - "arn:aws:dynamodb:${env:AWS_REGION}:*:table/${self:provider.environment.NAMESPACE}-main"
          - "arn:aws:dynamodb:${env:AWS_REGION}:*:table/${self:provider.environment.NAMESPACE}-main/index/*"
          - "arn:aws:dynamodb:${env:AWS_REGION}:*:table/${self:provider.environment.NAMESPACE}-main/stream/*"
          - "arn:aws:dynamodb:${env:AWS_REGION}:*:table/${self:provider.environment.NAMESPACE}-types"
          - "arn:aws:dynamodb:${env:AWS_REGION}:*:table/${self:provider.environment.NAMESPACE}-types/index/*"
