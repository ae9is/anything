Resources:
  # src/migrations/schema.json should mirror this if local database is to be used
  MainTable:
    Type: AWS::DynamoDB::Table
    # ref: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-product-attribute-reference.html
    # To prevent accidentally deleting the resource using CloudFormation:
    #DeletionPolicy: Retain
    #UpdateReplacePolicy: Retain
    Properties:
      TableName: ${self:provider.environment.NAMESPACE}-main
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: sort
          KeyType: RANGE
      # Only the attributes needed for keys (in table or GSI, LSI) can be put here
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: sort
          AttributeType: S
        - AttributeName: type
          AttributeType: S
        - AttributeName: ctype
          AttributeType: S
  #        - AttributeName: modified
  #          AttributeType: N
      GlobalSecondaryIndexes:
        - IndexName: gsi1
          Projection:
            ProjectionType: ALL
          KeySchema:
            - AttributeName: type
              KeyType: HASH
            - AttributeName: sort
              KeyType: RANGE
        - IndexName: gsi2
          Projection:
            ProjectionType: KEYS_ONLY
          KeySchema:
            - AttributeName: ctype
              KeyType: HASH
            - AttributeName: id
              KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      # Uncomment for deploying, following parameters are incompatible with serverless dynamodb local plugin
      # ref: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html#Streams.Enabling
      # ref: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-table-streamspecification.html
#      StreamSpecification:
#        StreamEnabled: True
#        StreamViewType: NEW_IMAGE
#      KinesisStreamSpecification:
#        StreamArn: ${param:streamArn}

  TypesTable:
    Type: 'AWS::DynamoDB::Table'
    # Force second table to be created sequentially to allow any future indices to be created on table
    # ref: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
    DependsOn: MainTable
    DeletionPolicy: Retain
    Properties:
      TableName: ${self:provider.environment.NAMESPACE}-types
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
